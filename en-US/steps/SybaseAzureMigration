<!--Migrate-->

### Overview

After you have completed assessing your databases and addressing any discrepancies, the next step is to execute the migration process. Migration involves two steps – publishing the schema and migrating the data. SSMA for Sybase is the correct tool to use for this process.

### Process

To use SSMA for Sybase to publish the database schema and migrate the data, perform the following steps.

1.Setting migration options

_Review the project migration options in the Project Settings dialog._

2.Migrate data to Azure SQL Database.

_After the migration is complete you will be able to view the migration report._

**Note**: For complete step-by-step guidance on publishing the schema and migrating the data, see the following resource:

* [Migrating Sybase ASE Data into SQL Server - Azure SQL DB (SybaseToSQL)](https://docs.microsoft.com/en-us/sql/ssma/sybase/migrating-sybase-ase-data-into-sql-server-azure-sql-db-sybasetosql)
* [SQL Server Migration Assistant: How to assess and migrate data from non-Microsoft data platforms to SQL Server](https://blogs.msdn.microsoft.com/datamigration/2016/11/16/sql-server-migration-assistant-how-to-assess-and-migrate-databases-from-non-microsoft-data-platforms-to-sql-server/)

### Near zero downtime migrations with Attunity Replicate!

Microsoft has partnered with Attunity around specific migration scenarios (source/target pairs). Attunity Replicate supports a very large set of sources and targets. The edition of Attunity Replicate that we refer to in the context of this partnership is known as Attunity Replicate For Microsoft Migrations (this is an Attunity product and not a Microsoft product) and enables only the scenarios for which we are partnering for now. 

Attunity Replicate is a data replication tool that enables data sync between a variety of sources and targets. In this context, 
Attunity Replicate propagates its schema creation script and its data. It will not propagate any other artifacts (SP, triggers, functions, ….) 
and will not convert say PL/SQL code hosted in artifacts like functions/SP/triggers to T-SQL. 

Proposed sequence and usage of tools:
1.	**Convert the source SAP ASE database** (schema and data) to SQL Server database with tools like [SQL Server Migration Assistant](https://www.microsoft.com/en-us/download/details.aspx?id=54258) or any other third party tool.
2.	**Continuously replicate data changes from the source database to the target database** with _Attunity Replicate For Microsoft Migrations_. This will help you minimize the amount of time you will need to prevent writes on the source database while you prepare to switch your applications to the target SQL Server databases.

Download link to [Attunity Replicate For Microsoft Migrations](https://www.attunity.com/products/replicate/attunity-replicate-for-microsoft-migration) offering.
