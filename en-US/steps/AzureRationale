<!--Rationale for Migrating-->

Azure SQL Database is a relational database service hosted in the Microsoft Cloud that is based on the market-leading Microsoft SQL Server engine. Azure SQL Database is capable of handling mission-critical workloads and delivers predictable performance at multiple service levels, dynamic scalability with no downtime, built-in business continuity, and data protection — all with near-zero administration.

These capabilities allow you to focus on rapid app development and accelerating your time-to-market, rather than allocating precious time and resources to managing virtual machines and infrastructure. Based on the [SQL Server](https://msdn.microsoft.com/library/bb545450.aspx) engine, Azure SQL Database supports existing SQL Server tools, libraries, and APIs. This makes it is easy for you to develop new solutions, to move your existing SQL Server solutions, and to extend your existing SQL Server solutions to the Microsoft Cloud without having to learn new skills.

Consider the detail in the following sections when evaluating the rationale for migrating.

**Performance and scale without downtime**

The Azure SQL Database service offers multiple [service tiers](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers) (Basic, Standard, Premium, and Premium RS), and each tier provides different levels of performance and capabilities to support lightweight to heavyweight database workloads. You can change tiers manually or programmatically at any time to meet the needs of your solution, and you can do this without downtime to your app or to your customers. Dynamic scalability enables your database to transparently respond to rapidly changing resource requirements and lets you pay for the resources you need when you need them.

**Use elastic pools to maximize resource utilization**

For businesses and applications with relatively unpredictable usage patterns, it can be hard to manage costs and the associated business model. [Elastic pools](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-elastic-pool) are designed to solve this problem by allowing you to allocate performance resources to a pool rather than to an individual database. Customers pay for the collective performance resources of the pool rather than for single database performance. With elastic pools, you don’t need to dial database performance up and down as demand for resources fluctuates. The pooled databases consume the performance resources of the elastic pool as needed.

**Blend single databases with pooled databases**

Either way you go — single databases or elastic pools — you are not locked in. You can blend single databases with elastic pools, and change the service tiers of single databases and elastic pools quickly and easily to adapt to your situation. Moreover, with the power and reach of Azure, you can mix-and-match other Azure services with SQL Database to meet your unique app design needs, drive cost and resource efficiencies, and unlock new business opportunities.

**Monitoring and alerting**

You use the [built-in performance monitoring](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-performance) and [alerting](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-insights-alerts-portal) tools, combined with the performance ratings based on [Database Transaction Units (DTUs) for single databases and elastic DTUs (eDTUs) for elastic pools](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-what-is-a-dtu), to quickly assess the impact of scaling up or down based on your current or project performance needs. See [SQL Database options and performance: Understand what's available in each service tier](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers) for details.

**Keeping your app and business running**

Azure's industry leading 99.99% availability service level agreement ([SLA](http://azure.microsoft.com/support/legal/sla/)), powered by a global network of Microsoft-managed datacenters, helps keep your app running 24/7. Every Azure SQL database takes advantage of built-in security, fault tolerance, and [data protection](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-automated-backups) that customers would otherwise have to buy or design, build, and manage. With SQL Database, each service tier offers a comprehensive set of business continuity features and options that you can use to get up and running and stay that way.

For example, you can:

* Use [point-in-time restore](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-recovery-using-backups) to return a database to an earlier state, as far back as 35 days.
* Configure [long-term backup retention](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-long-term-retention) to store backups in a secure vault for up to 10 years.
* Restore databases from [geo-redundant copies of recent backups](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-recovery-using-backups) if the datacenter hosting your databases experiences an outage. Additionally, you can configure [geo-redundant readable replicas](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-geo-replication-overview) in one or more regions for rapid failover in the event of a data center outage. Replicas also allow faster read performance in different geographic regions or for [application upgrades without downtime](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-manage-application-rolling-upgrade).

**Note**: See [Business Continuity](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-business-continuity) for details about the different business continuity features available for different service tiers.

**Securing your data**

SQL Server has a tradition of data security that Azure SQL Database upholds with features that limit access, protect data, and help you monitor activity. See [Securing your SQL database](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-security-overview) for a quick rundown of security options available in SQL Database. The article [Security Center for SQL Server Database Engine and SQL Database](https://msdn.microsoft.com/library/bb510589) provides a more comprehensive view of security features, and you can visit the [Azure Trust Center](https://azure.microsoft.com/support/trust-center/security/) for information about Azure's platform security.
